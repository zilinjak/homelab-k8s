apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "pms-chart.fullname" . }}
  labels:
    name: {{ include "pms-chart.fullname" . }}
{{ include "pms-chart.labels" . | indent 4 }}
  {{- with .Values.statefulSet.annotations }}
  annotations:
{{ toYaml . | indent 4 }}
  {{- end }}
spec:
  serviceName: {{ include "pms-chart.fullname" . }}
  selector:
    matchLabels:
      {{- include "pms-chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "pms-chart.labels" . | nindent 8 }}
      annotations:
        {{- toYaml .Values.statefulSet.podAnnotations | nindent 8 }}
    spec:
      securityContext:
        runAsUser: 0
        fsGroup: 0
      {{- if .Values.runtimeClassName }}
      runtimeClassName: {{ .Values.runtimeClassName | quote }}
      {{- end }}
      serviceAccountName: {{ include "pms-chart.serviceAccountName" . }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      volumes:
      {{- if .Values.pms.configExistingClaim }}
      - name: pms-config
        persistentVolumeClaim:
          claimName: {{ .Values.pms.configExistingClaim | quote }}
      {{- end }}
      - name: pms-transcode
        emptyDir: {}
      - name: transmission-config
        emptyDir: {}
      - name: transmission-watch
        emptyDir: {}
      terminationGracePeriodSeconds: 120
      containers:
      - name: {{ include "pms-chart.fullname" . }}-pms
        image: {{ include "pms-chart.image" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: 32400
          name: pms
        env:
        {{- if .Values.publicIngress.enabled }}
        - name: ADVERTISE_IP
          value: {{ .Values.publicIngress.url }}:443
        {{- end }}
        {{- if .Values.pms.gpu.nvidia.enabled }}
        - name: NVIDIA_VISIBLE_DEVICES
          value: all
        - name: NVIDIA_DRIVER_CAPABILITIES
          value: compute,video,utility
        {{- end }}
        {{- with .Values.pms.resources }}
        resources:
          limits:
          {{- with .limits }}
            {{ toYaml . | indent 12 | trim }}
          {{- end }}
          {{- if and $.Values.pms.gpu.nvidia.enabled (not (hasKey .limits "nvidia.com/gpu")) }}
            nvidia.com/gpu: 1
          {{- end }}
          {{- if .requests }}
          requests:
            {{ toYaml .requests | indent 12 | trim }}
          {{- end }}
        {{- end }}
        volumeMounts:
        - name: pms-config
          mountPath: /config
        - name: pms-transcode
          mountPath: /transcode
      - name: transmission
        image: ghcr.io/linuxserver/transmission
        env:
        - name: PUID
          value: "0"
        - name: PGID
          value: "0"
        - name: TZ
          value: "Europe/Prague"

        ports:
        - containerPort: 9091
          name: web-interface
          protocol: TCP
        - containerPort: 51413
          name: torrent-tcp
          protocol: TCP
        - containerPort: 51413
          name: torrents-udp
          protocol: UDP
        volumeMounts:
        - mountPath: /downloads
          name: pms-config
        - mountPath: /config
          name: transmission-config
        - mountPath: /watch
          name: transmission-watch
  {{- if not .Values.pms.configExistingClaim }}
  volumeClaimTemplates:
  - metadata:
      name: pms-config
    spec:
      accessModes: [ "ReadWriteOnce" ]
      {{- if .Values.pms.storageClassName }}
      storageClassName: {{ .Values.pms.storageClassName }}
      {{- end }}
      persistentVolumeClaimRetentionPolicy:
        whenDeleted: Retain
        whenScaled: Retain
      resources:
        requests:
          storage: {{ .Values.pms.configStorage }}
  - metadata:
      name: transmission-config
    spec:
      persistentVolumeClaimRetentionPolicy:
        whenDeleted: Retain
        whenScaled: Retain
      accessModes: [ "ReadWriteOnce" ]
      {{- if .Values.pms.storageClassName }}
      storageClassName: {{ .Values.pms.storageClassName }}
      {{- end }}
      resources:
        requests:
          storage: 1Gi
  - metadata:
      name: transmission-watch
    spec:
      persistentVolumeClaimRetentionPolicy:
        whenDeleted: Retain
        whenScaled: Retain
      accessModes: [ "ReadWriteOnce" ]
      {{- if .Values.pms.storageClassName }}
      storageClassName: {{ .Values.pms.storageClassName }}
      {{- end }}
      resources:
        requests:
          storage: 1Gi
  {{- end }}
